!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BOOST_AUTO_TEST_CASE	alert_tests.cpp	/^BOOST_AUTO_TEST_CASE(alert_authorize_any_source)$/;"	f	line:61	signature:(alert_authorize_any_source)
BOOST_AUTO_TEST_CASE	alert_tests.cpp	/^BOOST_AUTO_TEST_CASE(alert_manual_sources)$/;"	f	line:38	signature:(alert_manual_sources)
BOOST_AUTO_TEST_CASE	alert_tests.cpp	/^BOOST_AUTO_TEST_CASE(alert_positive_authorization)$/;"	f	line:23	signature:(alert_positive_authorization)
BOOST_AUTO_TEST_CASE	alert_tests.cpp	/^BOOST_AUTO_TEST_CASE(alert_unauthorized_source)$/;"	f	line:32	signature:(alert_unauthorized_source)
BOOST_AUTO_TEST_CASE	checkpoint_tests.cpp	/^BOOST_AUTO_TEST_CASE(consensus_string_accept)$/;"	f	line:65	signature:(consensus_string_accept)
BOOST_AUTO_TEST_CASE	checkpoint_tests.cpp	/^BOOST_AUTO_TEST_CASE(consensus_string_crowdsale)$/;"	f	line:84	signature:(consensus_string_crowdsale)
BOOST_AUTO_TEST_CASE	checkpoint_tests.cpp	/^BOOST_AUTO_TEST_CASE(consensus_string_mdex)$/;"	f	line:72	signature:(consensus_string_mdex)
BOOST_AUTO_TEST_CASE	checkpoint_tests.cpp	/^BOOST_AUTO_TEST_CASE(consensus_string_offer)$/;"	f	line:54	signature:(consensus_string_offer)
BOOST_AUTO_TEST_CASE	checkpoint_tests.cpp	/^BOOST_AUTO_TEST_CASE(consensus_string_property_issuer)$/;"	f	line:95	signature:(consensus_string_property_issuer)
BOOST_AUTO_TEST_CASE	checkpoint_tests.cpp	/^BOOST_AUTO_TEST_CASE(consensus_string_tally)$/;"	f	line:35	signature:(consensus_string_tally)
BOOST_AUTO_TEST_CASE	checkpoint_tests.cpp	/^BOOST_AUTO_TEST_CASE(get_checkpoints)$/;"	f	line:101	signature:(get_checkpoints)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_accept_dex_offer)$/;"	f	line:117	signature:(payload_accept_dex_offer)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_change_property_manager)$/;"	f	line:377	signature:(payload_change_property_manager)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_close_crowdsale)$/;"	f	line:247	signature:(payload_close_crowdsale)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_create_crowdsale)$/;"	f	line:181	signature:(payload_create_crowdsale)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_create_crowdsale_empty)$/;"	f	line:205	signature:(payload_create_crowdsale_empty)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_create_crowdsale_full)$/;"	f	line:226	signature:(payload_create_crowdsale_full)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_create_managed_property)$/;"	f	line:256	signature:(payload_create_managed_property)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_create_managed_property_empty)$/;"	f	line:275	signature:(payload_create_managed_property_empty)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_create_managed_property_full)$/;"	f	line:291	signature:(payload_create_managed_property_full)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_create_property)$/;"	f	line:127	signature:(payload_create_property)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_create_property_empty)$/;"	f	line:147	signature:(payload_create_property_empty)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_create_property_full)$/;"	f	line:164	signature:(payload_create_property_full)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_dex_offer)$/;"	f	line:55	signature:(payload_dex_offer)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_disable_freezing)$/;"	f	line:395	signature:(payload_disable_freezing)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_enable_freezing)$/;"	f	line:386	signature:(payload_enable_freezing)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_feature_activation)$/;"	f	line:437	signature:(payload_feature_activation)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_feature_deactivation)$/;"	f	line:428	signature:(payload_feature_deactivation)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_freeze_tokens)$/;"	f	line:404	signature:(payload_freeze_tokens)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_grant_tokens)$/;"	f	line:307	signature:(payload_grant_tokens)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_grant_tokens_empty)$/;"	f	line:320	signature:(payload_grant_tokens_empty)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_grant_tokens_full)$/;"	f	line:331	signature:(payload_grant_tokens_full)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_meta_dex_cancel_at_price)$/;"	f	line:83	signature:(payload_meta_dex_cancel_at_price)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_meta_dex_cancel_ecosystem)$/;"	f	line:107	signature:(payload_meta_dex_cancel_ecosystem)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_meta_dex_cancel_pair)$/;"	f	line:96	signature:(payload_meta_dex_cancel_pair)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_meta_dex_new_trade)$/;"	f	line:70	signature:(payload_meta_dex_new_trade)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_omnicore_alert_block)$/;"	f	line:448	signature:(payload_omnicore_alert_block)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_omnicore_alert_blockexpiry)$/;"	f	line:459	signature:(payload_omnicore_alert_blockexpiry)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_omnicore_alert_minclient)$/;"	f	line:470	signature:(payload_omnicore_alert_minclient)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_revoke_tokens)$/;"	f	line:342	signature:(payload_revoke_tokens)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_revoke_tokens_empty)$/;"	f	line:355	signature:(payload_revoke_tokens_empty)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_revoke_tokens_full)$/;"	f	line:366	signature:(payload_revoke_tokens_full)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_send_all)$/;"	f	line:46	signature:(payload_send_all)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_send_to_owners)$/;"	f	line:24	signature:(payload_send_to_owners)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_send_to_owners_v1)$/;"	f	line:35	signature:(payload_send_to_owners_v1)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_simple_send)$/;"	f	line:14	signature:(payload_simple_send)
BOOST_AUTO_TEST_CASE	create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_unfreeze_tokens)$/;"	f	line:416	signature:(payload_unfreeze_tokens)
BOOST_AUTO_TEST_CASE	create_tx_tests.cpp	/^BOOST_AUTO_TEST_CASE(omnitxbuilder_empty)$/;"	f	line:197	signature:(omnitxbuilder_empty)
BOOST_AUTO_TEST_CASE	create_tx_tests.cpp	/^BOOST_AUTO_TEST_CASE(omnitxbuilder_from_existing)$/;"	f	line:205	signature:(omnitxbuilder_from_existing)
BOOST_AUTO_TEST_CASE	create_tx_tests.cpp	/^BOOST_AUTO_TEST_CASE(omnitxbuilder_op_return)$/;"	f	line:220	signature:(omnitxbuilder_op_return)
BOOST_AUTO_TEST_CASE	create_tx_tests.cpp	/^BOOST_AUTO_TEST_CASE(txbuilder_add_change)$/;"	f	line:118	signature:(txbuilder_add_change)
BOOST_AUTO_TEST_CASE	create_tx_tests.cpp	/^BOOST_AUTO_TEST_CASE(txbuilder_add_change_position)$/;"	f	line:162	signature:(txbuilder_add_change_position)
BOOST_AUTO_TEST_CASE	create_tx_tests.cpp	/^BOOST_AUTO_TEST_CASE(txbuilder_add_input)$/;"	f	line:60	signature:(txbuilder_add_input)
BOOST_AUTO_TEST_CASE	create_tx_tests.cpp	/^BOOST_AUTO_TEST_CASE(txbuilder_add_outpoint)$/;"	f	line:46	signature:(txbuilder_add_outpoint)
BOOST_AUTO_TEST_CASE	create_tx_tests.cpp	/^BOOST_AUTO_TEST_CASE(txbuilder_add_output)$/;"	f	line:74	signature:(txbuilder_add_output)
BOOST_AUTO_TEST_CASE	create_tx_tests.cpp	/^BOOST_AUTO_TEST_CASE(txbuilder_add_outputs)$/;"	f	line:93	signature:(txbuilder_add_outputs)
BOOST_AUTO_TEST_CASE	create_tx_tests.cpp	/^BOOST_AUTO_TEST_CASE(txbuilder_empty)$/;"	f	line:26	signature:(txbuilder_empty)
BOOST_AUTO_TEST_CASE	create_tx_tests.cpp	/^BOOST_AUTO_TEST_CASE(txbuilder_from_existing)$/;"	f	line:34	signature:(txbuilder_from_existing)
BOOST_AUTO_TEST_CASE	crowdsale_participation_tests.cpp	/^BOOST_AUTO_TEST_CASE(max_limits)$/;"	f	line:48	signature:(max_limits)
BOOST_AUTO_TEST_CASE	crowdsale_participation_tests.cpp	/^BOOST_AUTO_TEST_CASE(negative_time)$/;"	f	line:71	signature:(negative_time)
BOOST_AUTO_TEST_CASE	crowdsale_participation_tests.cpp	/^BOOST_AUTO_TEST_CASE(overpayment_close)$/;"	f	line:13	signature:(overpayment_close)
BOOST_AUTO_TEST_CASE	dex_purchase_tests.cpp	/^BOOST_AUTO_TEST_CASE(overflow_protection)$/;"	f	line:72	signature:(overflow_protection)
BOOST_AUTO_TEST_CASE	dex_purchase_tests.cpp	/^BOOST_AUTO_TEST_CASE(purchase_amount_exact)$/;"	f	line:18	signature:(purchase_amount_exact)
BOOST_AUTO_TEST_CASE	dex_purchase_tests.cpp	/^BOOST_AUTO_TEST_CASE(purchase_amount_fraction)$/;"	f	line:64	signature:(purchase_amount_fraction)
BOOST_AUTO_TEST_CASE	dex_purchase_tests.cpp	/^BOOST_AUTO_TEST_CASE(purchase_amount_ladder)$/;"	f	line:31	signature:(purchase_amount_ladder)
BOOST_AUTO_TEST_CASE	encoding_b_tests.cpp	/^BOOST_AUTO_TEST_CASE(class_b_empty)$/;"	f	line:20	signature:(class_b_empty)
BOOST_AUTO_TEST_CASE	encoding_b_tests.cpp	/^BOOST_AUTO_TEST_CASE(class_b_maidsafe)$/;"	f	line:36	signature:(class_b_maidsafe)
BOOST_AUTO_TEST_CASE	encoding_b_tests.cpp	/^BOOST_AUTO_TEST_CASE(class_b_tetherus)$/;"	f	line:118	signature:(class_b_tetherus)
BOOST_AUTO_TEST_CASE	encoding_c_tests.cpp	/^BOOST_AUTO_TEST_CASE(class_c_marker)$/;"	f	line:21	signature:(class_c_marker)
BOOST_AUTO_TEST_CASE	encoding_c_tests.cpp	/^BOOST_AUTO_TEST_CASE(class_c_with_empty_payload)$/;"	f	line:75	signature:(class_c_with_empty_payload)
BOOST_AUTO_TEST_CASE	exodus_tests.cpp	/^BOOST_AUTO_TEST_CASE(exodus_address_mainnet)$/;"	f	line:16	signature:(exodus_address_mainnet)
BOOST_AUTO_TEST_CASE	exodus_tests.cpp	/^BOOST_AUTO_TEST_CASE(exodus_address_regtest)$/;"	f	line:48	signature:(exodus_address_regtest)
BOOST_AUTO_TEST_CASE	exodus_tests.cpp	/^BOOST_AUTO_TEST_CASE(exodus_address_testnet)$/;"	f	line:36	signature:(exodus_address_testnet)
BOOST_AUTO_TEST_CASE	exodus_tests.cpp	/^BOOST_AUTO_TEST_CASE(exodus_crowdsale_address_mainnet)$/;"	f	line:24	signature:(exodus_crowdsale_address_mainnet)
BOOST_AUTO_TEST_CASE	exodus_tests.cpp	/^BOOST_AUTO_TEST_CASE(exodus_crowdsale_address_regtest)$/;"	f	line:84	signature:(exodus_crowdsale_address_regtest)
BOOST_AUTO_TEST_CASE	exodus_tests.cpp	/^BOOST_AUTO_TEST_CASE(exodus_crowdsale_address_testnet)$/;"	f	line:60	signature:(exodus_crowdsale_address_testnet)
BOOST_AUTO_TEST_CASE	lock_tests.cpp	/^BOOST_AUTO_TEST_CASE(multithread_locking)$/;"	f	line:33	signature:(multithread_locking)
BOOST_AUTO_TEST_CASE	marker_tests.cpp	/^BOOST_AUTO_TEST_CASE(class_class_a)$/;"	f	line:96	signature:(class_class_a)
BOOST_AUTO_TEST_CASE	marker_tests.cpp	/^BOOST_AUTO_TEST_CASE(class_class_b)$/;"	f	line:156	signature:(class_class_b)
BOOST_AUTO_TEST_CASE	marker_tests.cpp	/^BOOST_AUTO_TEST_CASE(class_class_c)$/;"	f	line:221	signature:(class_class_c)
BOOST_AUTO_TEST_CASE	marker_tests.cpp	/^BOOST_AUTO_TEST_CASE(class_no_marker)$/;"	f	line:19	signature:(class_no_marker)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(continuations_2_byte)$/;"	f	line:183	signature:(continuations_2_byte)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(continuations_3_byte)$/;"	f	line:203	signature:(continuations_3_byte)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(continuations_4_byte)$/;"	f	line:221	signature:(continuations_4_byte)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(continuations_other)$/;"	f	line:241	signature:(continuations_other)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(impossible)$/;"	f	line:252	signature:(impossible)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(len_unchecked)$/;"	f	line:38	signature:(len_unchecked)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(length_max)$/;"	f	line:61	signature:(length_max)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(length_min)$/;"	f	line:49	signature:(length_min)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(length_other_bounds)$/;"	f	line:71	signature:(length_other_bounds)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(lonely_start_characters_2_byte)$/;"	f	line:101	signature:(lonely_start_characters_2_byte)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(lonely_start_characters_3_byte)$/;"	f	line:137	signature:(lonely_start_characters_3_byte)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(lonely_start_characters_4_byte)$/;"	f	line:157	signature:(lonely_start_characters_4_byte)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(lonely_start_characters_5_byte)$/;"	f	line:169	signature:(lonely_start_characters_5_byte)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(lonely_start_characters_6_byte)$/;"	f	line:177	signature:(lonely_start_characters_6_byte)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(mix_with_illegal_paired_utf_16_surrogates)$/;"	f	line:452	signature:(mix_with_illegal_paired_utf_16_surrogates)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(mix_with_illegal_single_utf_16_surrogates)$/;"	f	line:433	signature:(mix_with_illegal_single_utf_16_surrogates)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(omni_getproperty_2147483662)$/;"	f	line:485	signature:(omni_getproperty_2147483662)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(overlong_ascii)$/;"	f	line:411	signature:(overlong_ascii)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(range_1_byte)$/;"	f	line:260	signature:(range_1_byte)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(range_2_byte)$/;"	f	line:277	signature:(range_2_byte)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(range_3_byte)$/;"	f	line:312	signature:(range_3_byte)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(range_4_byte)$/;"	f	line:355	signature:(range_4_byte)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(range_5_byte)$/;"	f	line:385	signature:(range_5_byte)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(range_6_byte)$/;"	f	line:392	signature:(range_6_byte)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(range_7_byte)$/;"	f	line:399	signature:(range_7_byte)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(range_8_byte)$/;"	f	line:405	signature:(range_8_byte)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(unexpected_continuation)$/;"	f	line:89	signature:(unexpected_continuation)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(valid_ascii)$/;"	f	line:473	signature:(valid_ascii)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(valid_ff)$/;"	f	line:80	signature:(valid_ff)
BOOST_AUTO_TEST_CASE	mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(various_valid_strings)$/;"	f	line:518	signature:(various_valid_strings)
BOOST_AUTO_TEST_CASE	obfuscation_tests.cpp	/^BOOST_AUTO_TEST_CASE(prepare_obfuscated_hashes)$/;"	f	line:12	signature:(prepare_obfuscated_hashes)
BOOST_AUTO_TEST_CASE	output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(input_multisig)$/;"	f	line:53	signature:(input_multisig)
BOOST_AUTO_TEST_CASE	output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(input_nonstandard)$/;"	f	line:17	signature:(input_nonstandard)
BOOST_AUTO_TEST_CASE	output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(input_nulldata)$/;"	f	line:59	signature:(input_nulldata)
BOOST_AUTO_TEST_CASE	output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(input_pubkey)$/;"	f	line:23	signature:(input_pubkey)
BOOST_AUTO_TEST_CASE	output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(input_pubkeyhash)$/;"	f	line:29	signature:(input_pubkeyhash)
BOOST_AUTO_TEST_CASE	output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(input_scripthash)$/;"	f	line:35	signature:(input_scripthash)
BOOST_AUTO_TEST_CASE	output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(input_scripthash_testnet)$/;"	f	line:45	signature:(input_scripthash_testnet)
BOOST_AUTO_TEST_CASE	output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(output_multisig)$/;"	f	line:101	signature:(output_multisig)
BOOST_AUTO_TEST_CASE	output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(output_nonstandard)$/;"	f	line:65	signature:(output_nonstandard)
BOOST_AUTO_TEST_CASE	output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(output_nulldata)$/;"	f	line:107	signature:(output_nulldata)
BOOST_AUTO_TEST_CASE	output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(output_nulldata_testnet)$/;"	f	line:117	signature:(output_nulldata_testnet)
BOOST_AUTO_TEST_CASE	output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(output_pubkey)$/;"	f	line:71	signature:(output_pubkey)
BOOST_AUTO_TEST_CASE	output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(output_pubkeyhash)$/;"	f	line:77	signature:(output_pubkeyhash)
BOOST_AUTO_TEST_CASE	output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(output_scripthash)$/;"	f	line:83	signature:(output_scripthash)
BOOST_AUTO_TEST_CASE	output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(output_scripthash_testnet)$/;"	f	line:93	signature:(output_scripthash_testnet)
BOOST_AUTO_TEST_CASE	params_tests.cpp	/^BOOST_AUTO_TEST_CASE(ecosystem_restrictions_main)$/;"	f	line:35	signature:(ecosystem_restrictions_main)
BOOST_AUTO_TEST_CASE	params_tests.cpp	/^BOOST_AUTO_TEST_CASE(ecosystem_restrictions_test)$/;"	f	line:42	signature:(ecosystem_restrictions_test)
BOOST_AUTO_TEST_CASE	params_tests.cpp	/^BOOST_AUTO_TEST_CASE(get_params)$/;"	f	line:16	signature:(get_params)
BOOST_AUTO_TEST_CASE	params_tests.cpp	/^BOOST_AUTO_TEST_CASE(network_restrictions_main)$/;"	f	line:22	signature:(network_restrictions_main)
BOOST_AUTO_TEST_CASE	params_tests.cpp	/^BOOST_AUTO_TEST_CASE(network_restrictions_test)$/;"	f	line:28	signature:(network_restrictions_test)
BOOST_AUTO_TEST_CASE	params_tests.cpp	/^BOOST_AUTO_TEST_CASE(update_feature)$/;"	f	line:73	signature:(update_feature)
BOOST_AUTO_TEST_CASE	params_tests.cpp	/^BOOST_AUTO_TEST_CASE(update_feature_network)$/;"	f	line:51	signature:(update_feature_network)
BOOST_AUTO_TEST_CASE	parsing_a_tests.cpp	/^BOOST_AUTO_TEST_CASE(invalid_class_a)$/;"	f	line:240	signature:(invalid_class_a)
BOOST_AUTO_TEST_CASE	parsing_a_tests.cpp	/^BOOST_AUTO_TEST_CASE(valid_class_a)$/;"	f	line:73	signature:(valid_class_a)
BOOST_AUTO_TEST_CASE	parsing_b_tests.cpp	/^BOOST_AUTO_TEST_CASE(valid_arbitrary_output_number_class_b)$/;"	f	line:105	signature:(valid_arbitrary_output_number_class_b)
BOOST_AUTO_TEST_CASE	parsing_b_tests.cpp	/^BOOST_AUTO_TEST_CASE(valid_common_class_b)$/;"	f	line:81	signature:(valid_common_class_b)
BOOST_AUTO_TEST_CASE	parsing_c_tests.cpp	/^BOOST_AUTO_TEST_CASE(empty_op_return)$/;"	f	line:179	signature:(empty_op_return)
BOOST_AUTO_TEST_CASE	parsing_c_tests.cpp	/^BOOST_AUTO_TEST_CASE(multiple_op_return)$/;"	f	line:280	signature:(multiple_op_return)
BOOST_AUTO_TEST_CASE	parsing_c_tests.cpp	/^BOOST_AUTO_TEST_CASE(multiple_op_return_pushes)$/;"	f	line:336	signature:(multiple_op_return_pushes)
BOOST_AUTO_TEST_CASE	parsing_c_tests.cpp	/^BOOST_AUTO_TEST_CASE(multiple_op_return_short)$/;"	f	line:238	signature:(multiple_op_return_short)
BOOST_AUTO_TEST_CASE	parsing_c_tests.cpp	/^BOOST_AUTO_TEST_CASE(reference_identification)$/;"	f	line:74	signature:(reference_identification)
BOOST_AUTO_TEST_CASE	parsing_c_tests.cpp	/^BOOST_AUTO_TEST_CASE(trimmed_op_return)$/;"	f	line:203	signature:(trimmed_op_return)
BOOST_AUTO_TEST_CASE	rounduint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(rounduint64_absolute)$/;"	f	line:117	signature:(rounduint64_absolute)
BOOST_AUTO_TEST_CASE	rounduint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(rounduint64_limits)$/;"	f	line:52	signature:(rounduint64_limits)
BOOST_AUTO_TEST_CASE	rounduint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(rounduint64_promotion)$/;"	f	line:102	signature:(rounduint64_promotion)
BOOST_AUTO_TEST_CASE	rounduint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(rounduint64_round_below_point_5)$/;"	f	line:28	signature:(rounduint64_round_below_point_5)
BOOST_AUTO_TEST_CASE	rounduint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(rounduint64_round_over_point_5)$/;"	f	line:44	signature:(rounduint64_round_over_point_5)
BOOST_AUTO_TEST_CASE	rounduint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(rounduint64_round_point_5)$/;"	f	line:36	signature:(rounduint64_round_point_5)
BOOST_AUTO_TEST_CASE	rounduint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(rounduint64_simple)$/;"	f	line:13	signature:(rounduint64_simple)
BOOST_AUTO_TEST_CASE	rounduint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(rounduint64_special_cases)$/;"	f	line:139	signature:(rounduint64_special_cases)
BOOST_AUTO_TEST_CASE	rounduint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(rounduint64_types)$/;"	f	line:80	signature:(rounduint64_types)
BOOST_AUTO_TEST_CASE	rounduint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(rounduint64_whole_units)$/;"	f	line:20	signature:(rounduint64_whole_units)
BOOST_AUTO_TEST_CASE	rules_txs_tests.cpp	/^BOOST_AUTO_TEST_CASE(simple_send_restrictions)$/;"	f	line:18	signature:(simple_send_restrictions)
BOOST_AUTO_TEST_CASE	script_dust_tests.cpp	/^BOOST_AUTO_TEST_CASE(dust_threshold_multisig_compressed_compressed)$/;"	f	line:63	signature:(dust_threshold_multisig_compressed_compressed)
BOOST_AUTO_TEST_CASE	script_dust_tests.cpp	/^BOOST_AUTO_TEST_CASE(dust_threshold_multisig_compressed_compressed_compressed)$/;"	f	line:105	signature:(dust_threshold_multisig_compressed_compressed_compressed)
BOOST_AUTO_TEST_CASE	script_dust_tests.cpp	/^BOOST_AUTO_TEST_CASE(dust_threshold_multisig_uncompressed_compressed)$/;"	f	line:84	signature:(dust_threshold_multisig_uncompressed_compressed)
BOOST_AUTO_TEST_CASE	script_dust_tests.cpp	/^BOOST_AUTO_TEST_CASE(dust_threshold_multisig_uncompressed_compressed_compressed)$/;"	f	line:126	signature:(dust_threshold_multisig_uncompressed_compressed_compressed)
BOOST_AUTO_TEST_CASE	script_dust_tests.cpp	/^BOOST_AUTO_TEST_CASE(dust_threshold_pubkey_hash)$/;"	f	line:22	signature:(dust_threshold_pubkey_hash)
BOOST_AUTO_TEST_CASE	script_dust_tests.cpp	/^BOOST_AUTO_TEST_CASE(dust_threshold_script_hash)$/;"	f	line:44	signature:(dust_threshold_script_hash)
BOOST_AUTO_TEST_CASE	script_extraction_tests.cpp	/^BOOST_AUTO_TEST_CASE(extract_anypush_test)$/;"	f	line:258	signature:(extract_anypush_test)
BOOST_AUTO_TEST_CASE	script_extraction_tests.cpp	/^BOOST_AUTO_TEST_CASE(extract_empty_nulldata_test)$/;"	f	line:184	signature:(extract_empty_nulldata_test)
BOOST_AUTO_TEST_CASE	script_extraction_tests.cpp	/^BOOST_AUTO_TEST_CASE(extract_multisig_test)$/;"	f	line:62	signature:(extract_multisig_test)
BOOST_AUTO_TEST_CASE	script_extraction_tests.cpp	/^BOOST_AUTO_TEST_CASE(extract_multisig_with_skip_test)$/;"	f	line:96	signature:(extract_multisig_with_skip_test)
BOOST_AUTO_TEST_CASE	script_extraction_tests.cpp	/^BOOST_AUTO_TEST_CASE(extract_no_nulldata_test)$/;"	f	line:167	signature:(extract_no_nulldata_test)
BOOST_AUTO_TEST_CASE	script_extraction_tests.cpp	/^BOOST_AUTO_TEST_CASE(extract_nulldata_multipush_test)$/;"	f	line:223	signature:(extract_nulldata_multipush_test)
BOOST_AUTO_TEST_CASE	script_extraction_tests.cpp	/^BOOST_AUTO_TEST_CASE(extract_nulldata_test)$/;"	f	line:202	signature:(extract_nulldata_test)
BOOST_AUTO_TEST_CASE	script_extraction_tests.cpp	/^BOOST_AUTO_TEST_CASE(extract_pubkey_test)$/;"	f	line:16	signature:(extract_pubkey_test)
BOOST_AUTO_TEST_CASE	script_extraction_tests.cpp	/^BOOST_AUTO_TEST_CASE(extract_pubkeyhash_test)$/;"	f	line:38	signature:(extract_pubkeyhash_test)
BOOST_AUTO_TEST_CASE	script_extraction_tests.cpp	/^BOOST_AUTO_TEST_CASE(extract_scripthash_test)$/;"	f	line:139	signature:(extract_scripthash_test)
BOOST_AUTO_TEST_CASE	script_solver_tests.cpp	/^BOOST_AUTO_TEST_CASE(solve_op_return_test)$/;"	f	line:31	signature:(solve_op_return_test)
BOOST_AUTO_TEST_CASE	sender_bycontribution_tests.cpp	/^BOOST_AUTO_TEST_CASE(invalid_inputs)$/;"	f	line:44	signature:(invalid_inputs)
BOOST_AUTO_TEST_CASE	sender_bycontribution_tests.cpp	/^BOOST_AUTO_TEST_CASE(p2pkh_contribution_by_sum_order_test)$/;"	f	line:131	signature:(p2pkh_contribution_by_sum_order_test)
BOOST_AUTO_TEST_CASE	sender_bycontribution_tests.cpp	/^BOOST_AUTO_TEST_CASE(p2pkh_contribution_by_sum_test)$/;"	f	line:74	signature:(p2pkh_contribution_by_sum_test)
BOOST_AUTO_TEST_CASE	sender_bycontribution_tests.cpp	/^BOOST_AUTO_TEST_CASE(p2pkh_contribution_by_total_sum_test)$/;"	f	line:102	signature:(p2pkh_contribution_by_total_sum_test)
BOOST_AUTO_TEST_CASE	sender_bycontribution_tests.cpp	/^BOOST_AUTO_TEST_CASE(p2sh_contribution_by_sum_order_test)$/;"	f	line:217	signature:(p2sh_contribution_by_sum_order_test)
BOOST_AUTO_TEST_CASE	sender_bycontribution_tests.cpp	/^BOOST_AUTO_TEST_CASE(p2sh_contribution_by_sum_test)$/;"	f	line:159	signature:(p2sh_contribution_by_sum_test)
BOOST_AUTO_TEST_CASE	sender_bycontribution_tests.cpp	/^BOOST_AUTO_TEST_CASE(p2sh_contribution_by_total_sum_test)$/;"	f	line:187	signature:(p2sh_contribution_by_total_sum_test)
BOOST_AUTO_TEST_CASE	sender_bycontribution_tests.cpp	/^BOOST_AUTO_TEST_CASE(sender_selection_increasing_amount_test)$/;"	f	line:294	signature:(sender_selection_increasing_amount_test)
BOOST_AUTO_TEST_CASE	sender_bycontribution_tests.cpp	/^BOOST_AUTO_TEST_CASE(sender_selection_mixed_test)$/;"	f	line:312	signature:(sender_selection_mixed_test)
BOOST_AUTO_TEST_CASE	sender_bycontribution_tests.cpp	/^BOOST_AUTO_TEST_CASE(sender_selection_same_amount_test)$/;"	f	line:277	signature:(sender_selection_same_amount_test)
BOOST_AUTO_TEST_CASE	sender_bycontribution_tests.cpp	/^BOOST_AUTO_TEST_CASE(sender_selection_string_based_test)$/;"	f	line:250	signature:(sender_selection_string_based_test)
BOOST_AUTO_TEST_CASE	sender_firstin_tests.cpp	/^BOOST_AUTO_TEST_CASE(first_vin_is_sender)$/;"	f	line:93	signature:(first_vin_is_sender)
BOOST_AUTO_TEST_CASE	sender_firstin_tests.cpp	/^BOOST_AUTO_TEST_CASE(invalid_inputs)$/;"	f	line:122	signature:(invalid_inputs)
BOOST_AUTO_TEST_CASE	sender_firstin_tests.cpp	/^BOOST_AUTO_TEST_CASE(less_input_restrictions)$/;"	f	line:107	signature:(less_input_restrictions)
BOOST_AUTO_TEST_CASE	strtoint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(strtoint64_divisible)$/;"	f	line:42	signature:(strtoint64_divisible)
BOOST_AUTO_TEST_CASE	strtoint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(strtoint64_divisible_invalid)$/;"	f	line:66	signature:(strtoint64_divisible_invalid)
BOOST_AUTO_TEST_CASE	strtoint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(strtoint64_divisible_truncate)$/;"	f	line:58	signature:(strtoint64_divisible_truncate)
BOOST_AUTO_TEST_CASE	strtoint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(strtoint64_invidisible)$/;"	f	line:14	signature:(strtoint64_invidisible)
BOOST_AUTO_TEST_CASE	strtoint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(strtoint64_invidisible_invalid)$/;"	f	line:32	signature:(strtoint64_invidisible_invalid)
BOOST_AUTO_TEST_CASE	strtoint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(strtoint64_invidisible_truncate)$/;"	f	line:24	signature:(strtoint64_invidisible_truncate)
BOOST_AUTO_TEST_CASE	swapbyteorder_tests.cpp	/^BOOST_AUTO_TEST_CASE(swapbyteorder_cycle)$/;"	f	line:11	signature:(swapbyteorder_cycle)
BOOST_AUTO_TEST_CASE	tally_tests.cpp	/^BOOST_AUTO_TEST_CASE(empty_tally)$/;"	f	line:11	signature:(empty_tally)
BOOST_AUTO_TEST_CASE	tally_tests.cpp	/^BOOST_AUTO_TEST_CASE(filled_tally)$/;"	f	line:35	signature:(filled_tally)
BOOST_AUTO_TEST_CASE	tally_tests.cpp	/^BOOST_AUTO_TEST_CASE(tally_entry_order)$/;"	f	line:110	signature:(tally_entry_order)
BOOST_AUTO_TEST_CASE	tally_tests.cpp	/^BOOST_AUTO_TEST_CASE(tally_equality)$/;"	f	line:177	signature:(tally_equality)
BOOST_AUTO_TEST_CASE	tally_tests.cpp	/^BOOST_AUTO_TEST_CASE(tally_overflow)$/;"	f	line:266	signature:(tally_overflow)
BOOST_AUTO_TEST_CASE	uint256_extensions_tests.cpp	/^BOOST_AUTO_TEST_CASE(uint256_add)$/;"	f	line:24	signature:(uint256_add)
BOOST_AUTO_TEST_CASE	uint256_extensions_tests.cpp	/^BOOST_AUTO_TEST_CASE(uint256_const)$/;"	f	line:99	signature:(uint256_const)
BOOST_AUTO_TEST_CASE	uint256_extensions_tests.cpp	/^BOOST_AUTO_TEST_CASE(uint256_conversion)$/;"	f	line:76	signature:(uint256_conversion)
BOOST_AUTO_TEST_CASE	uint256_extensions_tests.cpp	/^BOOST_AUTO_TEST_CASE(uint256_div)$/;"	f	line:63	signature:(uint256_div)
BOOST_AUTO_TEST_CASE	uint256_extensions_tests.cpp	/^BOOST_AUTO_TEST_CASE(uint256_divide_and_round_up)$/;"	f	line:94	signature:(uint256_divide_and_round_up)
BOOST_AUTO_TEST_CASE	uint256_extensions_tests.cpp	/^BOOST_AUTO_TEST_CASE(uint256_from_uint64_t)$/;"	f	line:15	signature:(uint256_from_uint64_t)
BOOST_AUTO_TEST_CASE	uint256_extensions_tests.cpp	/^BOOST_AUTO_TEST_CASE(uint256_modulo)$/;"	f	line:84	signature:(uint256_modulo)
BOOST_AUTO_TEST_CASE	uint256_extensions_tests.cpp	/^BOOST_AUTO_TEST_CASE(uint256_modulo_auto_conversion)$/;"	f	line:89	signature:(uint256_modulo_auto_conversion)
BOOST_AUTO_TEST_CASE	uint256_extensions_tests.cpp	/^BOOST_AUTO_TEST_CASE(uint256_mul)$/;"	f	line:50	signature:(uint256_mul)
BOOST_AUTO_TEST_CASE	uint256_extensions_tests.cpp	/^BOOST_AUTO_TEST_CASE(uint256_sub)$/;"	f	line:37	signature:(uint256_sub)
BOOST_AUTO_TEST_CASE	version_tests.cpp	/^BOOST_AUTO_TEST_CASE(config_package_version)$/;"	f	line:34	signature:(config_package_version)
BOOST_AUTO_TEST_CASE	version_tests.cpp	/^BOOST_AUTO_TEST_CASE(version_comparison)$/;"	f	line:12	signature:(version_comparison)
BOOST_AUTO_TEST_CASE	version_tests.cpp	/^BOOST_AUTO_TEST_CASE(version_number)$/;"	f	line:29	signature:(version_number)
BOOST_AUTO_TEST_CASE	version_tests.cpp	/^BOOST_AUTO_TEST_CASE(version_string)$/;"	f	line:24	signature:(version_string)
CheckOutputType	script_solver_tests.cpp	/^static void CheckOutputType(const CScript& script, txnouttype outTypeExpected)$/;"	f	line:17	file:	signature:(const CScript& script, txnouttype outTypeExpected)
GetFirstSender	sender_firstin_tests.cpp	/^static bool GetFirstSender(const std::vector<CTxOut>& txInputs, std::string& strSender)$/;"	f	line:78	file:	signature:(const std::vector<CTxOut>& txInputs, std::string& strSender)
GetSenderByContribution	sender_bycontribution_tests.cpp	/^static bool GetSenderByContribution(const std::vector<CTxOut>& vouts, std::string& strSender)$/;"	f	line:369	file:	signature:(const std::vector<CTxOut>& vouts, std::string& strSender)
MAX_BLOCK	rules_txs_tests.cpp	/^const int MAX_BLOCK = std::numeric_limits<int>::max();$/;"	v	line:15
MAX_VERSION	rules_txs_tests.cpp	/^const int MAX_VERSION = std::numeric_limits<uint16_t>::max();$/;"	v	line:16
NonStandardOutput	utils_tx.cpp	/^CTxOut NonStandardOutput()$/;"	f	line:203	signature:()
OMNICORE_TEST_UTILS_TX_H	utils_tx.h	2;"	d	line:2
OpReturn_Empty	utils_tx.cpp	/^CTxOut OpReturn_Empty()$/;"	f	line:149	signature:()
OpReturn_MultiSimpleSend	utils_tx.cpp	/^CTxOut OpReturn_MultiSimpleSend()$/;"	f	line:190	signature:()
OpReturn_PlainMarker	utils_tx.cpp	/^CTxOut OpReturn_PlainMarker()$/;"	f	line:173	signature:()
OpReturn_SimpleSend	utils_tx.cpp	/^CTxOut OpReturn_SimpleSend()$/;"	f	line:181	signature:()
OpReturn_Unrelated	utils_tx.cpp	/^CTxOut OpReturn_Unrelated()$/;"	f	line:165	signature:()
OpReturn_UnrelatedShort	utils_tx.cpp	/^CTxOut OpReturn_UnrelatedShort()$/;"	f	line:157	signature:()
PayToBareMultisig_1of2	utils_tx.cpp	/^CTxOut PayToBareMultisig_1of2()$/;"	f	line:64	signature:()
PayToBareMultisig_1of3	utils_tx.cpp	/^CTxOut PayToBareMultisig_1of3()$/;"	f	line:88	signature:()
PayToBareMultisig_3of5	utils_tx.cpp	/^CTxOut PayToBareMultisig_3of5()$/;"	f	line:116	signature:()
PayToPubKeyHash_Exodus	utils_tx.cpp	/^CTxOut PayToPubKeyHash_Exodus()$/;"	f	line:16	signature:()
PayToPubKeyHash_ExodusCrowdsale	utils_tx.cpp	/^CTxOut PayToPubKeyHash_ExodusCrowdsale(int nHeight)$/;"	f	line:24	signature:(int nHeight)
PayToPubKeyHash_Unrelated	utils_tx.cpp	/^CTxOut PayToPubKeyHash_Unrelated()$/;"	f	line:32	signature:()
PayToPubKey_Unrelated	utils_tx.cpp	/^CTxOut PayToPubKey_Unrelated()$/;"	f	line:48	signature:()
PayToScriptHash_Unrelated	utils_tx.cpp	/^CTxOut PayToScriptHash_Unrelated()$/;"	f	line:40	signature:()
TxClassA	parsing_a_tests.cpp	/^static CTransaction TxClassA(const std::vector<CTxOut>& txInputs, const std::vector<CTxOut>& txOuts)$/;"	f	line:29	file:	signature:(const std::vector<CTxOut>& txInputs, const std::vector<CTxOut>& txOuts)
TxClassB	parsing_b_tests.cpp	/^static CTransaction TxClassB(const std::vector<CTxOut>& txInputs, const std::vector<CTxOut>& txOuts)$/;"	f	line:29	file:	signature:(const std::vector<CTxOut>& txInputs, const std::vector<CTxOut>& txOuts)
TxClassB	sender_bycontribution_tests.cpp	/^static CTransaction TxClassB(const std::vector<CTxOut>& txInputs)$/;"	f	line:331	file:	signature:(const std::vector<CTxOut>& txInputs)
TxClassC	parsing_c_tests.cpp	/^static CTransaction TxClassC(const std::vector<CTxOut>& txInputs, const std::vector<CTxOut>& txOuts)$/;"	f	line:30	file:	signature:(const std::vector<CTxOut>& txInputs, const std::vector<CTxOut>& txOuts)
TxClassC	sender_firstin_tests.cpp	/^static CTransaction TxClassC(const std::vector<CTxOut>& txInputs)$/;"	f	line:28	file:	signature:(const std::vector<CTxOut>& txInputs)
check_mb	mbstring_tests.cpp	/^bool check_mb(const std::string& s)$/;"	f	line:18	namespace:mastercore::mbstring	signature:(const std::string& s)
createRandomKeyId	sender_bycontribution_tests.cpp	/^static CKeyID createRandomKeyId()$/;"	f	line:391	file:	signature:()
createRandomScriptId	sender_bycontribution_tests.cpp	/^static CScriptID createRandomScriptId()$/;"	f	line:402	file:	signature:()
createTxOut	parsing_a_tests.cpp	/^static CTxOut createTxOut(int64_t amount, const std::string& dest)$/;"	f	line:68	file:	signature:(int64_t amount, const std::string& dest)
createTxOut	parsing_b_tests.cpp	/^static CTxOut createTxOut(int64_t amount, const std::string& dest)$/;"	f	line:68	file:	signature:(int64_t amount, const std::string& dest)
createTxOut	parsing_c_tests.cpp	/^static CTxOut createTxOut(int64_t amount, const std::string& dest)$/;"	f	line:69	file:	signature:(int64_t amount, const std::string& dest)
createTxOut	sender_bycontribution_tests.cpp	/^static CTxOut createTxOut(int64_t amount, const std::string& dest)$/;"	f	line:385	file:	signature:(int64_t amount, const std::string& dest)
createTxOut	sender_firstin_tests.cpp	/^static CTxOut createTxOut(int64_t amount, const std::string& dest)$/;"	f	line:72	file:	signature:(int64_t amount, const std::string& dest)
cs_number	lock_tests.cpp	/^    CCriticalSection cs_number;$/;"	m	line:17	namespace:locker	file:
getPayloadSize	parsing_b_tests.cpp	/^static size_t getPayloadSize(unsigned int nPackets)$/;"	f	line:74	file:	signature:(unsigned int nPackets)
locker	lock_tests.cpp	/^namespace locker$/;"	n	line:15	file:
locker::cs_number	lock_tests.cpp	/^    CCriticalSection cs_number;$/;"	m	line:17	namespace:locker	file:
mastercore	checkpoint_tests.cpp	/^namespace mastercore$/;"	n	line:19	file:
mastercore	dex_purchase_tests.cpp	/^namespace mastercore {$/;"	n	line:10	file:
mastercore	mbstring_tests.cpp	/^namespace mastercore {$/;"	n	line:10	file:
mastercore::mbstring	mbstring_tests.cpp	/^namespace mbstring {$/;"	n	line:11	namespace:mastercore	file:
mastercore::mbstring::check_mb	mbstring_tests.cpp	/^bool check_mb(const std::string& s)$/;"	f	line:18	namespace:mastercore::mbstring	signature:(const std::string& s)
mbstring	mbstring_tests.cpp	/^namespace mbstring {$/;"	n	line:11	namespace:mastercore	file:
minRelayTxFeeOriginal	create_tx_tests.cpp	/^static CFeeRate minRelayTxFeeOriginal = CFeeRate(DEFAULT_MIN_RELAY_TX_FEE);$/;"	v	line:22	file:
minRelayTxFeeOriginal	script_dust_tests.cpp	/^static CFeeRate minRelayTxFeeOriginal = CFeeRate(DEFAULT_MIN_RELAY_TX_FEE);$/;"	v	line:18	file:
n	lock_tests.cpp	/^    int n = 0;$/;"	m	line:12	namespace:number	file:
nAllRounds	sender_bycontribution_tests.cpp	/^static const unsigned nAllRounds = 2;$/;"	v	line:38	file:
nOutputs	sender_bycontribution_tests.cpp	/^static const unsigned nOutputs = 256;$/;"	v	line:37	file:
nShuffleRounds	sender_bycontribution_tests.cpp	/^static const unsigned nShuffleRounds = 16;$/;"	v	line:39	file:
number	lock_tests.cpp	/^namespace number$/;"	n	line:10	file:
number::n	lock_tests.cpp	/^    int n = 0;$/;"	m	line:12	namespace:number	file:
plusOneThread	lock_tests.cpp	/^static void plusOneThread(int nIterations)$/;"	f	line:20	file:	signature:(int nIterations)
shuffleAndCheck	sender_bycontribution_tests.cpp	/^void shuffleAndCheck(std::vector<CTxOut>& vouts, unsigned nRounds)$/;"	f	line:418	signature:(std::vector<CTxOut>& vouts, unsigned nRounds)
